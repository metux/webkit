From: Alberto Garcia <berto@igalia.com>
Subject: Hide plugins if the plugin process is not available
Forwarded: no
Index: webkitgtk/Source/WebKit2/UIProcess/Plugins/unix/PluginProcessProxyUnix.cpp
===================================================================
--- webkitgtk.orig/Source/WebKit2/UIProcess/Plugins/unix/PluginProcessProxyUnix.cpp
+++ webkitgtk/Source/WebKit2/UIProcess/Plugins/unix/PluginProcessProxyUnix.cpp
@@ -83,13 +83,16 @@ bool PluginProcessProxy::scanPlugin(cons
 
 #if PLATFORM(GTK)
     bool requiresGtk2 = pluginRequiresGtk2(pluginPath);
-    if (requiresGtk2)
+    if (requiresGtk2) {
 #if ENABLE(PLUGIN_PROCESS_GTK2)
         pluginProcessPath.append('2');
+        if (!fileExists(pluginProcessPath))
+            return false;
 #else
         return false;
 #endif
 #endif
+    }
 
     CString binaryPath = fileSystemRepresentation(pluginProcessPath);
     CString pluginPathCString = fileSystemRepresentation(pluginPath);
Index: webkitgtk/Source/WebKit2/UIProcess/Plugins/unix/PluginInfoStoreUnix.cpp
===================================================================
--- webkitgtk.orig/Source/WebKit2/UIProcess/Plugins/unix/PluginInfoStoreUnix.cpp
+++ webkitgtk/Source/WebKit2/UIProcess/Plugins/unix/PluginInfoStoreUnix.cpp
@@ -33,6 +33,7 @@
 
 #include "NetscapePluginModule.h"
 #include "PluginSearchPath.h"
+#include "ProcessExecutablePath.h"
 #include <WebCore/FileSystem.h>
 
 #if PLATFORM(GTK)
@@ -69,8 +70,17 @@ Vector<String> PluginInfoStore::individu
 bool PluginInfoStore::getPluginInfo(const String& pluginPath, PluginModuleInfo& plugin)
 {
 #if PLATFORM(GTK)
-    if (PluginInfoCache::singleton().getPluginInfo(pluginPath, plugin))
+    if (PluginInfoCache::singleton().getPluginInfo(pluginPath, plugin)) {
+#if ENABLE(PLUGIN_PROCESS_GTK2)
+        if (plugin.requiresGtk2) {
+            String pluginProcessPath = executablePathOfPluginProcess();
+            pluginProcessPath.append('2');
+            if (!fileExists(pluginProcessPath))
+                return false;
+        }
+#endif
         return true;
+    }
 
     if (NetscapePluginModule::getPluginInfo(pluginPath, plugin)) {
         PluginInfoCache::singleton().updatePluginInfo(pluginPath, plugin);
